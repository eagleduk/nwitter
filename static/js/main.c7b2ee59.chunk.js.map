{"version":3,"sources":["FBInstance.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","AppAuth","icon","faTwitter","color","size","style","marginBottom","provider","GoogleAuthProvider","signInWithPopup","faGoogle","Nweet","nweetObj","isOwner","isEditing","setEditing","text","newText","setNewText","onDeleteNweet","window","confirm","doc","id","delete","refFromURL","attachmentUrl","onToggleEditing","collection","update","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","ref","child","uid","uuidv4","attachmentRef","putString","attachmentTemp","getDownloadURL","add","createAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","file","files","reader","FileReader","onloadend","finishEvent","result","readAsDataURL","opacity","width","height","backgroundImage","faTimes","AppHome","nweets","setNweets","useEffect","onSnapshot","snapshot","temp","docs","map","data","marginTop","Profile","userUpdate","displayName","setDisplayName","history","useHistory","updateObj","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7b2ee59.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"FBInstance\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  // email 값에 대한 Hook\r\n  const [email, setEmail] = useState(\"\");\r\n  // password 값에 대한 Hook\r\n  const [password, setPassword] = useState(\"\");\r\n  // 새로운 인증(가입), 기존 인증(로그인) 인지 판별하는 Hook\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  // error 발생에 대한 Hook\r\n  const [error, setError] = useState(\"\");\r\n  // input text의 change 이벤트\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  // form 의 submit 함수 - 사용자 인증\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // 가입/로그인 상태에 대한 토글 함수\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { authService, firebaseInstance } from \"FBInstance\";\r\n\r\nconst AppAuth = () => {\r\n  // social 로그인에 대한 이벤트\r\n  const onSocialClick = (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppAuth;\r\n","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { dbService, storageService } from \"FBInstance\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  // Nweet이 수정중 상태인지 판별하는 Hook\r\n  const [isEditing, setEditing] = useState(false);\r\n  // Nweet의 수정값에 대한 Hook\r\n  const [newText, setNewText] = useState(nweetObj.text);\r\n\r\n  // Nweet의 삭제 버튼 이벤트\r\n  const onDeleteNweet = async (event) => {\r\n    const isDelete = window.confirm(\"Are you sure delete this nweet?\");\r\n    if (isDelete) {\r\n      //await dbService.collection(`nweets`).doc(nweetObj.id).delete();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  // Edit 상태에 대한 토글 함수\r\n  const onToggleEditing = (event) => {\r\n    setEditing((prev) => !prev);\r\n    if (!isEditing) setNewText(nweetObj.text);\r\n  };\r\n\r\n  // input 값의 change 이벤트\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewText(value);\r\n  };\r\n\r\n  // form 의 submit 함수 - nweet 수정\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService\r\n      .collection(\"nweets\")\r\n      .doc(nweetObj.id)\r\n      .update({ text: newText });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {isEditing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              value={newText}\r\n              onChange={onChange}\r\n              placeholder=\"Update Nweet\"\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            <button onClick={onToggleEditing} className=\"formBtn cancelBtn\">\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteNweet}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={onToggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"FBInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  // 새로운 nweet의 입력에 대한 Hook\r\n  const [nweet, setNweet] = useState(\"\");\r\n  // 첨부 파일에 대한 Hook\r\n  const [attachment, setAttachment] = useState(null);\r\n\r\n  // form 의 submit 함수 - nweet 등록\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = null;\r\n    if (attachment) {\r\n      const attachmentRef = await storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const attachmentTemp = await attachmentRef.putString(\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await attachmentTemp.ref.getDownloadURL();\r\n    }\r\n\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl: attachmentUrl ? attachmentUrl : null,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(null);\r\n  };\r\n\r\n  // nweet의 input 입력 change 이벤트\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onChangeAttachment = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const file = files[0];\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishEvent) => {\r\n      const {\r\n        target: { result },\r\n      } = finishEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onAttachmentClear = (event) => {\r\n    setAttachment(null);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          value={nweet}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          onChange={onChange}\r\n          className=\"factoryInput__input\"\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onChangeAttachment}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            width=\"50px\"\r\n            height=\"50px\"\r\n            alt=\"\"\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onAttachmentClear}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\n\r\nimport { dbService } from \"FBInstance\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst AppHome = ({ userObj }) => {\r\n  // 등록된 nweet 들의 리스트에 대한 Hook\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 등록된 nweet 의 상태를 감지\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const temp = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setNweets(temp);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHome;\r\n","import { authService } from \"FBInstance\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, userUpdate }) => {\r\n  const [displayName, setDisplayName] = useState(userObj.displayName);\r\n\r\n  // const [nweets, setNweets] = useState([]);\r\n  // const getMyNweets = async () => {\r\n  //   const nweets = await dbService\r\n  //     .collection(\"nweets\")\r\n  //     .where(\"creatorId\", \"==\", userObj.uid)\r\n  //     .orderBy(\"createAt\", \"desc\")\r\n  //     .get();\r\n  //   const myNweets = nweets.docs.map((nweet) => {\r\n  //     return {\r\n  //       ...nweet.data(),\r\n  //       id: nweet.id,\r\n  //     };\r\n  //   });\r\n  //   setNweets(myNweets);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // }, []);\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = (event) => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChangeDisplayName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (displayName !== userObj.displayName) {\r\n      const updateObj = {\r\n        displayName: displayName,\r\n      };\r\n      await userObj.updateProfile(updateObj);\r\n      userUpdate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          value={displayName ? displayName : \"\"}\r\n          required\r\n          onChange={onChangeDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n      {/* \r\n      {nweets.map((nweet) => (\r\n        <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n        />\r\n      ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AppAuth from \"routes/Auth\";\r\nimport AppHome from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, userUpdate }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <AppHome userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} userUpdate={userUpdate} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <AppAuth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"FBInstance\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // 유저 상태에 대한 Hook\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 인증에 대한 변화가 감지되었을 때\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        //setUserObj(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const userUpdate = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          userUpdate={userUpdate}\n        />\n      ) : (\n        \"Loading....\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}